#
#
#
#
tosca_definitions_version: tosca_simple_yaml_1_0
description: >
  Sample NSD for integration testing.

imports:
  - etsi_nfv_sol001_nsd_types.yaml


topology_template:
  node_templates:
    nested_ns01:
      type: tosca.nodes.nfv.NS
      properties:
        descriptor_id: 2e5958f9-9bfd-46c6-b8fe-75cf0b3c78ab
        designer: ovi@ubiqube.com
        version: 0.0.1
        name: Small NSD.
        invariant_id: 2e5958f9-9bfd-46c6-b8fe-75cf0b3c78ab
        flavour_id: flavor01
        ns_profile: # tosca.datatypes.nfv.NsProfile
          ns_instantiation_level: demo
          min_number_of_instances: 1
          max_number_of_instances: 1
          flavour_id: flavor02
      requirements:
        #- virtual_link: # tosca.nodes.nfv.NsVirtualLink

    vnf_1:
      type:  tosca.nodes.nfv.VNF
      properties:
        flavour_id: flavor01
        descriptor_id: d0bd6d65-0302-4922-8c4d-73282cfcfc08
      requirements:
        - virtual_link: # tosca.nodes.nfv.NsVirtualLink
            node: internal
        - virtual_link: # tosca.nodes.nfv.NsVirtualLink
            node: internal2

    internal:
      type: tosca.nodes.nfv.NsVirtualLink
      properties:
        description: First VL
        vl_profile: # tosca.datatypes.nfv.NsVlProfile
          max_bitrate_requirements:
            root: 1000
            leaf: 5000
          min_bitrate_requirements:
            root: 200
            leaf: 400
          qos: # tosca.datatypes.nfv.NsVirtualLinkQos
            priority: 0
          service_availability_level: 1
          virtual_link_protocol_data: # list of tosca.datatypes.nfv.NsVirtualLinkProtocolData
            - associated_layer_protocol:
              l2_protocol_data: # tosca.datatypes.nfv.NsL2ProtocolData
                name: internal-l2
                vlan_transparent: false
                mtu: 1442
                segmentation_id: "0"
              l3_protocol_data: #tosca.datatypes.nfv.NsL3ProtocolData
                name: internal-l3
                ip_version: ipv4
                cidr: 10.1.0.0/24
                ip_allocation_pools: # list of tosca.datatypes.nfv.NsIpAllocationPool
                  - start_ip_address: 10.1.0.5
                    end_ip_address: 10.1.0.250
        connectivity_type: # tosca.datatypes.nfv.ConnectivityType
          layer_protocols:
            - ipv4
          flow_pattern: mesh
        test_access:
          - test

    internal2:
      type: tosca.nodes.nfv.NsVirtualLink
      properties:
        description: First VL
        vl_profile: # tosca.datatypes.nfv.NsVlProfile
          max_bitrate_requirements:
            root: 1000
            leaf: 5000
          min_bitrate_requirements:
            root: 200
            leaf: 400
          qos: # tosca.datatypes.nfv.NsVirtualLinkQos
            priority: 0
          service_availability_level: 1
          virtual_link_protocol_data: # list of tosca.datatypes.nfv.NsVirtualLinkProtocolData
            - associated_layer_protocol:
              l2_protocol_data: # tosca.datatypes.nfv.NsL2ProtocolData
                name: internal2-l2
                vlan_transparent: false
                mtu: 1442
                segmentation_id: "1"
              l3_protocol_data: #tosca.datatypes.nfv.NsL3ProtocolData
                name: internal2-l3
                ip_version: ipv4
                cidr: 10.10.0.0/24
                ip_allocation_pools: # list of tosca.datatypes.nfv.NsIpAllocationPool
                  - start_ip_address: 10.10.0.5
                    end_ip_address: 10.10.0.250
        connectivity_type: # tosca.datatypes.nfv.ConnectivityType
          layer_protocols:
            - ipv4
          flow_pattern: mesh
        test_access:
          - test

    # For VNF_1
    element_1:  # Port pair? port pair group ?
      type: tosca.nodes.nfv.NfpPositionElement
      requirements:
        - profile_element:
            node: VNF_1_forward_1
            capability: forwarding
        - profile_element:
            node: VNF_1_forward_2
            capability: forwarding

    # For VNF_2
    element_2:  # Port pair? port pair group ?
      type: tosca.nodes.nfv.NfpPositionElement
      requirements:
        - profile_element:
            node: VNF_2_forward_3
            capability: forwarding
        - profile_element:
            node: VNF_2_forward_4
            capability: forwarding


    nfp_position_1:
      type: tosca.nodes.nfv.NfpPosition
      properties:
        forwarding_behaviour: lb
      capabilities:
        forwarding: # tosca.capabilities.nfv.Forwarding
      requirements:
        - element: element_1# tosca.nodes.nfv.NfpPositionElement
        - element: element_2


    nfp_1:
      type: tosca.nodes.nfv.NFP
      requirements:
        - nfp_position: nfp_position_1 # tosca.nodes.nfv.NfpPosition
        - nfp_position: nfp_position_2

    forwarding:
      type: tosca.nodes.nfv.Forwarding
      capabilities:
        virtual_linkable: # tosca.capabilities.nfv.VirtualLinkable
        forwarding: # tosca.capabilities.nfv.Forwarding
      requirements:
        - virtual_link: vl01

policies:
  affinity:
    type: tosca.policies.nfv.AffinityRule
    properties:
      scope: nfvi_pop
    targets: 
      - vl01


  anti_affinity:
    type: tosca.policies.nfv.AntiAffinityRule
    properties:
      scope: zone
    targets:
      - vl01


  security_group01:
    type: tosca.policies.nfv.SecurityGroupRule
    properties:
      description: test SG
      direction: egress
      ether_type: ipv4
      protocol: tcp
      port_range_min: 1
      port_range_max: 65535
    targets:
      - sap01

  nfp_rule: # classifier
    type: tosca.policies.nfv.NfpRule
    properties:
      ether_destination_address:
      ether_source_address:
      ether_type: ipv4
      vlan_tag:
        - srt
        - str2
      protocol:
      dscp:
      source_port_range: 0 - 22
      source_ip_address_prefix:
      destination_ip_address_prefix:
      extended_criteria: # tosca.datatypes.nfv.Mask
        - starting_point: 1
          length: 7
          value: string
    targets:
      - nfp_1 # tosca.nodes.nfv.NFP


  ns_scaling_aspect:
    type: tosca.policies.nfv.NsScalingAspects
    properties:
      aspects: # map tosca.datatypes.nfv.NsScalingAspect
        aspect:
          name: aspect
          description: descr
          ns_scale_levels:
            1: # map<Integer, tosca.datatypes.nfv.NsLevels> 
              description: descr

  vnf_to_level_map:
    type: tosca.policies.nfv.VnfToLevelMapping
    properties:
      aspect: aspect
      number_of_instances: # map<Integer, Integer>
        0: 0
        1: 1
        2: 2
        3: 3
    targets: [ vnf_1 ]

  ns instantiation_level:
    type: tosca.policies.nfv.NsInstantiationLevels
    properties:
      default_level: level_1
      ns_levels: # map<tosca.datatypes.nfv.NsLevels>
        level_1:
          description: Level 1
        level_2:
          description: Level 2
        level_3:
          description: level 3
        level_4:
          description: level 4

  vnf_to_inst_level:
    type: tosca.policies.nfv.VnfToInstantiationLevelMapping
    properties:
      number_of_instances: # map<String, Integer>
        level_1: 0
        level_2: 1
        level_3: 2
        level_4: 3
    targets: [ vnf_1 ]

  vl_to_inst:
    type: tosca.policies.nfv.VirtualLinkToInstantiationLevelMapping
    properties:
      bit_rate_requirements: # map<String, tosca.datatypes.nfv.LinkBitrateRequirements>
        inst_lvl:
          root: 34
          leaf: 45

group_types:
  vnfgg:
    type: tosca.groups.nfv.VNFFG
    properties:
      description: descr
    members:  [ nfp_1, VNF_1, VNF_2, VNF_3, internal, element_1, element_2, element_3 ]


  placement_group:
    tpye: tosca.groups.nfv.NsPlacementGroup
    properties:
      description: descr.






