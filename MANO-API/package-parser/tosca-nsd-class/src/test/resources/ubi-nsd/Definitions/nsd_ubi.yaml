#
#
#
#
tosca_definitions_version: tosca_simple_yaml_1_0
description: >
  Sample NSD for integration testing.

imports:
  - etsi_nfv_sol001_nsd_types.yaml
  - etsi_nfv_sol001_vnfd_types.yaml


topology_template:
  node_templates:
    ns01:
      type: tosca.nodes.nfv.NS
      properties:
        descriptor_id: fb4f8f06-f4b0-4d80-8cda-cd95cf018972
        designer: ovi@ubiqube.com
        version: 0.0.1
        name: First NSD.
        invariant_id: 65f6fbed-654b-4d68-b730-5d8d72a8b865
        flavour_id: flavor01
        ns_profile: # tosca.datatypes.nfv.NsProfile
          ns_instantiation_level: demo
          min_number_of_instances: 1
          max_number_of_instances: 1
          flavour_id: flavor02
        service_availability_level: 1
        priority: 1
        scale_status: # This is a capabilities not a properties.
          level1: 1
      requirements:
        - virtual_link: vl # tosca.nodes.nfv.NsVirtualLink


    vnf_1:
      type: tosca.nodes.nfv.VNF
      properties:
        flavour_id: flavor01
        descriptor_id: dcd11fbf-c767-41eb-abc9-cec35dd95bca
      requirements:
        - virtual_link: vl01
        - virtual_link: vl02

    vl01:
      type: tosca.nodes.nfv.NsVirtualLink
      properties:
        description: First VL
        vl_profile: # tosca.datatypes.nfv.NsVlProfile
          max_bitrate_requirements:
            root: 1000
            leaf: 5000
          min_bitrate_requirements:
            root: 200
            leaf: 400
          qos: # tosca.datatypes.nfv.NsVirtualLinkQos
            latency: 10 s
            packet_delay_variation: 1s
            packet_loss_ratio: 0.001
            priority: 0
          service_availability_level: 1
          virtual_link_protocol_data: # list<tosca.datatypes.nfv.NsVirtualLinkProtocolData>
            - associated_layer_protocol: mpls
              l2_protocol_data: # tosca.datatypes.nfv.NsL2ProtocolData
                name: name
                network_type: vxlan
                vlan_transparent: false
                mtu: 1400
                segmentation_id: vlan0
              l3_protocol_data: # tosca.datatypes.nfv.NsL3ProtocolData
                name: l3
                ip_version: ipv4
                cidr: 0.0.0.0
                ip_allocation_pools: # List<tosca.datatypes.nfv.NsIpAllocationPool>
                  - start_ip_address: 1.1.1.1
                    end_ip_address: 2.2.2.2
        connectivity_type: # tosca.datatypes.nfv.ConnectivityType
          layer_protocols:
            - ipv4
          flow_pattern: mesh
        test_access: # valid_values: [ passive_monitoring, active_loopback ]
          - test
      capabilities:
        virtual_linkable: # tosca.capabilities.nfv.VirtualLinkable
      requirements:
        - virtual_link: vl # tosca.nodes.nfv.NsVirtualLink
  
  
    sap01:
      type: tosca.nodes.nfv.Sap
      properties:
        layer_protocols:
          - ipv4
        role: root
        description: Description.
        protocol: # tosca.datatypes.nfv.CpProtocolData
          - associated_layer_protocol: mpls
            address_data: # tosca.datatypes.nfv.AddressData
              - address_type: ip_address
                l2_address_data: # tosca.datatypes.nfv.L2AddressData
                  mac_address_assignment: true
                l3_address_data: # tosca.datatypes.nfv.L3AddressData
                  ip_address_assignment: true
                  floating_ip_activated: true
                  ip_address_type: ipv4
                  number_of_ip_address: 10
        trunk_mode: false
      requirements:
        - external_virtual_link: public
        - internal_virtual_link: vl01



    # For VNF_1
    element_1:  # Port pair? port pair group ?
      type: tosca.nodes.nfv.NfpPositionElement
      capabilities:
        forwarding: # tosca.capabilities.nfv.Forwarding
          internal_name: test
      requirements:
        - profile_element: 
            node: VNF_1_forward_1
            capability: forwarding
        - profile_element: 
            node: VNF_1_forward_2
            capability: forwarding
  
    # For VNF_2
    element_2:  # Port pair? port pair group ?
      type: tosca.nodes.nfv.NfpPositionElement
      requirements:
        - profile_element: 
            node: VNF_2_forward_3
            capability: forwarding
        - profile_element: 
            node: VNF_2_forward_4
            capability: forwarding
  
  
    nfp_position_1:
      type: tosca.nodes.nfv.NfpPosition
      properties:
        forwarding_behaviour: lb
      capabilities:
        forwarding: # tosca.capabilities.nfv.Forwarding
          internal_name: test
      requirements:
        - element: element_1 # tosca.nodes.nfv.NfpPositionElement
        - element: element_2
  
    nfp_1:
      type: tosca.nodes.nfv.NFP
      requirements:
        - nfp_position: nfp_position_1
        - nfp_position: nfp_position_2
  
    forwarding:
      type: tosca.nodes.nfv.Forwarding
      capabilities:
        virtual_linkable: # tosca.capabilities.nfv.VirtualLinkable
        forwarding: # tosca.capabilities.nfv.Forwarding
      requirements:
        - virtual_link: vl01


policies:
  affinity:
    type: tosca.policies.nfv.AffinityRule
    properties:
      scope: nfvi_pop
    targets: 
      - vl01


  anti_affinity:
    type: tosca.policies.nfv.AntiAffinityRule
    properties:
      scope: zone
    targets:
      - vl01


  security_group01:
    type: tosca.policies.nfv.SecurityGroupRule
    properties:
      description: test SG
      direction: egress
      ether_type: ipv4
      protocol: tcp
      port_range_min: 0
      port_range_max: 65535
    targets:
      - sap01


  monitoring_rule:
    type: tosca.policies.nfv.NsMonitoring
    properties:
      ns_monitoring_parameters: # map tosca.datatypes.nfv.NsMonitoringParameter
        mon_name:
          name: name
          performance_metric: byte_incoming_sap
          collection_period: 60 s
    targets: # tosca.nodes.nfv.NS

  vnf_mon:
    type: tosca.policies.nfv.VnfMonitoring
    properties:
      vnf_monitoring_parameters: # map tosca.datatypes.nfv.VnfMonitoringParameter
        vnf_mon:
          name: name

  ns_scaling_aspect:
    type: tosca.policies.nfv.NsScalingAspects
    properties:
      aspects: # map tosca.datatypes.nfv.NsScalingAspect
        an_aspect:
          name: an another name
          description: descr
          ns_scale_levels:
            1: # map<Integer, tosca.datatypes.nfv.NsLevels> 
              description: descr

  vnf_to_level_map:
    type: tosca.policies.nfv.VnfToLevelMapping
    properties:
      aspect: aspect
      number_of_instances: # map<Integer, Integer>
        1: 2
        2: 1
    targets: # [ tosca.nodes.nfv.VNF ]

  ns_to_level_map:
    type: tosca.policies.nfv.NsToLevelMapping
    properties:
      aspect: name
      number_of_instances: # map<Integer, Integer>
        1: 3
        2: 4
    targets: # [ tosca.nodes.nfv.NS ]

  virt_link_mapping:
    type: tosca.policies.nfv.VirtualLinkToLevelMapping
    properties:
      aspect: aspect
      bit_rate_requirements: # map<Integer, tosca.datatypes.nfv.LinkBitrateRequirements>
        1:
          root: 12
          leaf: 34
    targets: # [ tosca.nodes.nfv.NsVirtualLink ]

  ns instantiation_level:
    type: tosca.policies.nfv.NsInstantiationLevels
    properties:
      ns_levels: # map<tosca.datatypes.nfv.NsLevels>
        level:
          description: descr

  vnf_to_inst_level:
    type: tosca.policies.nfv.VnfToInstantiationLevelMapping
    properties:
      number_of_instances: # map<String, Integer>
        inst_lvl: 5
    targets: #[ tosca.nodes.nfv.VNF ]

  ns_to_inst_level:
    type: tosca.policies.nfv.NsToInstantiationLevelMapping
    properties:
      number_of_instances: # map<String, Integer>
        inst_lvl: 2
    targets: #[ tosca.nodes.nfv.NS ]

  vl_to_inst:
    type: tosca.policies.nfv.VirtualLinkToInstantiationLevelMapping
    properties:
      bit_rate_requirements: # map<String, tosca.datatypes.nfv.LinkBitrateRequirements>
        inst_lvl:
          root: 34
          leaf: 45

  auto_scale:
    type: tosca.policies.nfv.NsAutoScale
    properties:
    targets: #[ tosca.nodes.nfv.NS ]


group_types:
  vnfgg:
    type: tosca.groups.nfv.VNFFG
    properties:
      description: descr
    members: # [ tosca.nodes.nfv.NFP, tosca.nodes.nfv.VNF, tosca.nodes.nfv.PNF, tosca.nodes.nfv.NS, tosca.nodes.nfv.NsVirtualLink, tosca.nodes.nfv.NfpPositionElement ]
      - one
      - two

  placement_group:
    tpye: tosca.groups.nfv.NsPlacementGroup
    properties:
      description: descr.


policies:
  nfp_rule: # classifier
    type: tosca.policies.nfv.NfpRule
    properties:
      destination_port_range: 1 - 4
      ether_destination_address: 1.2.3.4
      ether_source_address: 4.5.6.7
      ether_type: ipv4
      vlan_tag:
        - srt
        - str2
      protocol: ipv4
      dscp: a1234
      source_port_range: 0 - 22
      source_ip_address_prefix: 1.2.3
      destination_ip_address_prefix: 2.3.4
      extended_criteria: # tosca.datatypes.nfv.Mask
        - starting_point: 1
          length: 7
          value: string
      targets: [ nfp_1] # tosca.nodes.nfv.NFP




