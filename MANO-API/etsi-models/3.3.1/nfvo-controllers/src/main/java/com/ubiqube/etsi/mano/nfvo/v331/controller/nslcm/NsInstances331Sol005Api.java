/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.24).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ubiqube.etsi.mano.nfvo.v331.controller.nslcm;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.CreateNsRequest;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.HealNsRequest;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.InstantiateNsRequest;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.NsInstance;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.ProblemDetails;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.ScaleNsRequest;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.TerminateNsRequest;
import com.ubiqube.etsi.mano.nfvo.v331.model.nslcm.UpdateNsRequest;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;

@RequestMapping(value = "/sol005/nslcm/v1", headers = { "Version=3.3.1" })
public interface NsInstances331Sol005Api {

	Logger log = LoggerFactory.getLogger(NsInstances331Sol005Api.class);

	default Optional<ObjectMapper> getObjectMapper() {
		return Optional.empty();
	}

	default Optional<HttpServletRequest> getRequest() {
		return Optional.empty();
	}

	default Optional<String> getAcceptHeader() {
		return getRequest().map(r -> r.getHeader("Accept"));
	}

	@Operation(summary = "Query multiple NS instances.", description = "Query NS Instances. The GET method queries information about multiple NS instances. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.2.3.2-1 and 6.4.2.3.2-2. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "200 OK Shall be returned when information about zero or more NS instances has been queried successfully. The response body shall contain in an array the representations of zero or more NS instances, as defined in clause 6.5.2.8. If the \"filter\" URI parameter or one of the \"all_fields\", \"fields\" (if supported), \"exclude_fields\" (if supported) or \"exclude_default\" URI parameters was supplied in the request, the data in the response body shall have been transformed according to the rules specified in clauses 5.2.2 and 5.3.2 of ETSI GS NFV-SOL 013 [16], respectively. If the NFVO supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 [16] for this resource, inclusion of the Link HTTP header in this response shall follow the provisions in clause 5.4.2.3 of ETSI GS NFV-SOL 013 [16]. ", content = @Content(array = @ArraySchema(schema = @Schema(implementation = NsInstance.class)))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances", produces = { "application/json" }, method = RequestMethod.GET)
	default ResponseEntity<List<NsInstance>> nsInstancesGet(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization,
			@Parameter(in = ParameterIn.QUERY, description = "Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression. ", schema = @Schema()) @Valid @RequestParam(value = "filter", required = false) final String filter, @Parameter(in = ParameterIn.QUERY, description = "Include all complex attributes in the response. See clause 5.3 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "all_fields", required = false) final String allFields, @Parameter(in = ParameterIn.QUERY, description = "Complex attributes to be included into the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity should support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "fields", required = false) final String fields,
			@Parameter(in = ParameterIn.QUERY, description = "Complex attributes to be excluded from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity should support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "exclude_fields", required = false) final String excludeFields, @Parameter(in = ParameterIn.QUERY, description = "Indicates to exclude the following complex attributes from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity shall support this parameter. The NFVO shall support this parameter. The following attributes shall be excluded from the NsInstance structure in the response body if this parameter is provided, or none of the parameters \"all_fields,\" \"fields\", \"exclude_fields\", \"exclude_default\" are provided: - vnfInstances - pnfInfo - virtualLinkInfo - vnffgInfo - sapInfo - nsScaleStatus - additionalAffinityOrAntiAffinityRules -   wanConnectionInfo", schema = @Schema()) @Valid @RequestParam(value = "exclude_default", required = false) final String excludeDefault,
			@Parameter(in = ParameterIn.QUERY, description = "Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource. ", schema = @Schema()) @Valid @RequestParam(value = "nextpage_opaque_marker", required = false) final String nextpageOpaqueMarker) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
							"[ {\n  \"flavourId\" : \"flavourId\",\n  \"vnfSnapshotInfoIds\" : [ null, null ],\n  \"_links\" : {\n    \"vnfSnapshotInfos\" : [ null, null ],\n    \"nestedNsInstances\" : [ null, null ],\n    \"self\" : {\n      \"href\" : \"http://example.com/aeiou\"\n    }\n  },\n  \"wanConnectionInfo\" : [ {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  }, {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  } ],\n  \"nsInstanceDescription\" : \"nsInstanceDescription\",\n  \"nestedNsInstanceId\" : [ null, null ],\n  \"nsScaleStatus\" : [ { }, { } ],\n  \"vnfInstance\" : [ {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  }, {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  } ],\n  \"monitoringParameter\" : [ {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  }, {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  } ],\n  \"sapInfo\" : [ {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  }, {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  } ],\n  \"additionalAffinityOrAntiAffinityRule\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  } ],\n  \"pnfInfo\" : [ {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  }, {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  } ],\n  \"vnffgInfo\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  } ],\n  \"id\" : \"id\",\n  \"nsInstanceName\" : \"nsInstanceName\",\n  \"virtualLinkInfo\" : [ {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  }, {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  } ],\n  \"nsState\" : \"NOT_INSTANTIATED\"\n}, {\n  \"flavourId\" : \"flavourId\",\n  \"vnfSnapshotInfoIds\" : [ null, null ],\n  \"_links\" : {\n    \"vnfSnapshotInfos\" : [ null, null ],\n    \"nestedNsInstances\" : [ null, null ],\n    \"self\" : {\n      \"href\" : \"http://example.com/aeiou\"\n    }\n  },\n  \"wanConnectionInfo\" : [ {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  }, {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  } ],\n  \"nsInstanceDescription\" : \"nsInstanceDescription\",\n  \"nestedNsInstanceId\" : [ null, null ],\n  \"nsScaleStatus\" : [ { }, { } ],\n  \"vnfInstance\" : [ {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  }, {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  } ],\n  \"monitoringParameter\" : [ {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  }, {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  } ],\n  \"sapInfo\" : [ {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  }, {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  } ],\n  \"additionalAffinityOrAntiAffinityRule\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  } ],\n  \"pnfInfo\" : [ {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  }, {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  } ],\n  \"vnffgInfo\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  } ],\n  \"id\" : \"id\",\n  \"nsInstanceName\" : \"nsInstanceName\",\n  \"virtualLinkInfo\" : [ {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  }, {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  } ],\n  \"nsState\" : \"NOT_INSTANTIATED\"\n} ]",
							List.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Delete NS instance resource.", description = "Delete NS Identifier This method deletes an individual NS instance resource. As the result of successfully executing this method, the \"Individual NS instance\" resource shall not exist any longer. A notification of type \"NsIdentifierDeletionNotification\" shall be triggered as part of successfully executing this method as defined in clause 6.5.2.7. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "204", description = "204 No Content Shall be returned when the \"Individual NS instance\" resource and the associated NS identifier have been deleted successfully. The response body shall be empty. "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "412", description = "412 PRECONDITION FAILED Error: A precondition given in an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the resource was modified by another entity. The response body should contain a ProblemDetails structure, in which the \"detail\" attribute should convey more information about the error. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}", produces = { "application/json" }, method = RequestMethod.DELETE)
	default ResponseEntity<Void> nsInstancesNsInstanceIdDelete(@Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId, @Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Read an individual NS instance resource.", description = "The GET method retrieves information about a NS instance by  reading an individual NS instance resource. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "200 OK Shall be returned when information about an individual NS instance has been read successfully. The response body shall contain a representation of the NS instance, as defined in clause 6.5.2.10. ", content = @Content(schema = @Schema(implementation = NsInstance.class))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}", produces = { "application/json" }, method = RequestMethod.GET)
	default ResponseEntity<NsInstance> nsInstancesNsInstanceIdGet(@Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId, @Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
							"{\n  \"flavourId\" : \"flavourId\",\n  \"vnfSnapshotInfoIds\" : [ null, null ],\n  \"_links\" : {\n    \"vnfSnapshotInfos\" : [ null, null ],\n    \"nestedNsInstances\" : [ null, null ],\n    \"self\" : {\n      \"href\" : \"http://example.com/aeiou\"\n    }\n  },\n  \"wanConnectionInfo\" : [ {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  }, {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  } ],\n  \"nsInstanceDescription\" : \"nsInstanceDescription\",\n  \"nestedNsInstanceId\" : [ null, null ],\n  \"nsScaleStatus\" : [ { }, { } ],\n  \"vnfInstance\" : [ {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  }, {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  } ],\n  \"monitoringParameter\" : [ {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  }, {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  } ],\n  \"sapInfo\" : [ {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  }, {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  } ],\n  \"additionalAffinityOrAntiAffinityRule\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  } ],\n  \"pnfInfo\" : [ {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  }, {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  } ],\n  \"vnffgInfo\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  } ],\n  \"id\" : \"id\",\n  \"nsInstanceName\" : \"nsInstanceName\",\n  \"virtualLinkInfo\" : [ {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  }, {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  } ],\n  \"nsState\" : \"NOT_INSTANTIATED\"\n}",
							NsInstance.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Heal a NS instance.", description = "The POST method requests to heal an NS instance. This method shall follow the provisions specified in the Tables 6.4.7.3.1-1 and 6.4.7.3.1-2 for URI query parameters, request and response data structures, and response codes. The steps and conditions that apply as the result of successfully executing this method are specified in clause 6.4.1.2. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "202", description = "202 ACCEPTED "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}/heal", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<Void> nsInstancesNsInstanceIdHealPost(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType, @Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId, @Parameter(in = ParameterIn.DEFAULT, description = "Parameters for the heal NS operation, as defined in clause 6.5.2.13.", required = true, schema = @Schema()) @Valid @RequestBody final HealNsRequest body,
			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Instantiate a NS.", description = "The POST method requests to instantiate a NS instance resource. The steps and conditions that apply as the result of successfully executing this method are specified in clause 6.4.1.2. In addition, once the NFVO has successfully completed the underlying NS LCM operation occurrence, it shall set the \"nsState\" attribute to the value \"INSTANTIATED\" in the representation of the \"Individual NS instance\" resource. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "202", description = "202 ACCEPTED "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}/instantiate", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<Void> nsInstancesNsInstanceIdInstantiatePost(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType, @Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId,
			@Parameter(in = ParameterIn.DEFAULT, description = "Parameters for the instantiate NS operation, as defined in clause 6.5.2.11.", required = true, schema = @Schema()) @Valid @RequestBody final InstantiateNsRequest body, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Scale a NS instance.", description = "The POST method requests to scale a NS instance resource. The steps and conditions that apply as the result of successfully executing this method are specified in clause 6.4.1.2. In addition, once the NFVO has successfully completed the underlying NS LCM operation occurrence, it shall reflect the result of scaling the NS instance by updating the \"nsScaleStatus\" attribute in the representation of the \"Individual NS instance\" resource. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "202", description = "202 ACCEPTED "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}/scale", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<Void> nsInstancesNsInstanceIdScalePost(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType, @Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId,
			@Parameter(in = ParameterIn.DEFAULT, description = "Parameters for the scale NS operation, as defined in clause 6.5.2.14.", required = true, schema = @Schema()) @Valid @RequestBody final ScaleNsRequest body, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Terminate a NS instance.", description = "Terminate NS task.   The POST method terminates an NS instance. This method shall follow the provisions specified in the Tables 6.4.8.3.1-1 and 6.4.8.3.1-2 for URI query parameters, request and response data structures, and response codes. The steps and conditions that apply as the result of successfully executing this method are specified in clause 6.4.1.2. In addition, once the NFVO has successfully completed the underlying NS LCM operation occurrence, it shall set the \"nsState\" attribute in the representation of the \"Individual NS instance\" resource to the value \"NOT_INSTANTIATED\". This method can only be used with an NS instance in the INSTANTIATED state. Terminating an NS instance does not delete the NS instance identifier, but rather transitions the NS into the NOT_INSTANTIATED state. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "202", description = "202 ACCEPTED "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}/terminate", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<Void> nsInstancesNsInstanceIdTerminatePost(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType, @Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId,
			@Parameter(in = ParameterIn.DEFAULT, description = "The terminate NS request parameters, as defined in  clause 6.5.2.15.", required = true, schema = @Schema()) @Valid @RequestBody final TerminateNsRequest body, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Updates a NS instance.", description = "The POST method updates an NS instance. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "202", description = "202 ACCEPTED "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances/{nsInstanceId}/update", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<Void> nsInstancesNsInstanceIdUpdatePost(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType, @Parameter(in = ParameterIn.PATH, description = "Identifier of the NS instance. ", required = true, schema = @Schema()) @PathVariable("nsInstanceId") final String nsInstanceId,
			@Parameter(in = ParameterIn.DEFAULT, description = "Parameters for the update NS operation, as defined in clause 6.5.2.12.", required = true, schema = @Schema()) @Valid @RequestBody final UpdateNsRequest body, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "Create a NS instance resource.", description = "The POST method creates a new NS instance resource. As the result of successfully executing this method, a new \"Individual NS instance\" resource as defined in clause 6.4.3 shall have been created, and the value of the \"instantiationState\" attribute in the representation of that resource shall be \"NOT_INSTANTIATED\". A notification of type NsIdentifierCreationNotification shall be triggered as part of successfully executing this method as defined in clause 6.5.2.6. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "201", description = "201 Created Shall be returned when a new \"Individual NS instance\" resource and the associated NS instance identifier has been created successfully. The response body shall contain a representation of the created NS instance, as defined in clause 6.5.2.10. The HTTP response shall include a \"Location\" HTTP header that contains the resource URI of the created NS instance. ", content = @Content(schema = @Schema(implementation = NsInstance.class))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/ns_instances", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<NsInstance> nsInstancesPost(@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version, @Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept, @Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType,
			@Parameter(in = ParameterIn.DEFAULT, description = "The NS creation parameters, as defined in clause 6.5.2.7.", required = true, schema = @Schema()) @Valid @RequestBody final CreateNsRequest body, @Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
							"{\n  \"flavourId\" : \"flavourId\",\n  \"vnfSnapshotInfoIds\" : [ null, null ],\n  \"_links\" : {\n    \"vnfSnapshotInfos\" : [ null, null ],\n    \"nestedNsInstances\" : [ null, null ],\n    \"self\" : {\n      \"href\" : \"http://example.com/aeiou\"\n    }\n  },\n  \"wanConnectionInfo\" : [ {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  }, {\n    \"protocolInfo\" : {\n      \"mscsInfo\" : {\n        \"mscsDescription\" : \"mscsDescription\",\n        \"mscsName\" : \"mscsName\",\n        \"siteAccessProtectionSchemes\" : [ {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        }, {\n          \"locationConstraints\" : {\n            \"area\" : { },\n            \"countryCode\" : \"countryCode\",\n            \"civicAddressElement\" : [ {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            }, {\n              \"caType\" : 1,\n              \"caValue\" : \"caValue\"\n            } ]\n          },\n          \"protectionScheme\" : \"UNPROTECTED\"\n        } ],\n        \"mscsLayerProtocol\" : \"EVPN_BGP_MPLS\",\n        \"mscsType\" : \"L2VPN\",\n        \"mtuMscs\" : 5.962133916683182,\n        \"mscsEndpoints\" : [ {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        }, {\n          \"connectivityServiceEndpoinId\" : [ null, null ],\n          \"directionality\" : \"INBOUND\"\n        } ]\n      },\n      \"connectivityServiceEndpoints\" : [ {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      }, {\n        \"siteToWanLayer3ProtocolData\" : {\n          \"mtuL3\" : 9.301444243932576,\n          \"routingInfo\" : {\n            \"routingAddressFamily\" : \"IPV4\",\n            \"bgpRouting\" : {\n              \"bgpAs\" : { }\n            },\n            \"ospfRouting\" : {\n              \"areaId\" : \"areaId\"\n            },\n            \"routingProtocol\" : \"BGP\",\n            \"routeMapsDistribution\" : {\n              \"sequence\" : 7.061401241503109,\n              \"policy\" : \"PERMIT\"\n            },\n            \"staticRouting\" : {\n              \"ipVersion\" : \"IPV4\",\n              \"prefixSize\" : 2.3021358869347655\n            }\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"vrfName\" : \"vrfName\"\n          },\n          \"logicalInterfaceIpAddress\" : {\n            \"associatedSegmentId\" : \"associatedSegmentId\"\n          }\n        },\n        \"siteToWanLayer2ProtocolData\" : {\n          \"mtuL2\" : 5.637376656633329,\n          \"forwardingConfig\" : {\n            \"networkResources\" : [ null, null ],\n            \"vnSegmentIds\" : {\n              \"vnSegmentIdUpperRange\" : \"vnSegmentIdUpperRange\",\n              \"vnSegmentIdValue\" : \"vnSegmentIdValue\"\n            }\n          },\n          \"layer2ConnectionInfo\" : {\n            \"wanSegmentIds\" : {\n              \"wanSegmentIdValue\" : \"wanSegmentIdValue\",\n              \"wanSegmentIdUpperRange\" : \"wanSegmentIdUpperRange\"\n            },\n            \"interfaceType\" : \"PARENT\",\n            \"vxlanConfig\" : {\n              \"peerMode\" : \"STATIC\",\n              \"peers\" : [ null, null ]\n            },\n            \"lagInterfaceData\" : {\n              \"aggregatedEndpoints\" : [ null, null ],\n              \"lacpActivation\" : true\n            },\n            \"encapsulationType\" : \"ETH\",\n            \"vlanTaggingType\" : \"DOT1Q\",\n            \"interfaceTagging\" : \"UNTAGGED\",\n            \"connectionType\" : \"CSE\"\n          },\n          \"virtualRoutingAndForwarding\" : {\n            \"macVrfName\" : \"macVrfName\"\n          }\n        }\n      } ]\n    }\n  } ],\n  \"nsInstanceDescription\" : \"nsInstanceDescription\",\n  \"nestedNsInstanceId\" : [ null, null ],\n  \"nsScaleStatus\" : [ { }, { } ],\n  \"vnfInstance\" : [ {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  }, {\n    \"vnfProductName\" : \"vnfProductName\",\n    \"vnfProvider\" : \"vnfProvider\",\n    \"vnfConfigurableProperties\" : { },\n    \"instantiationState\" : \"NOT_INSTANTIATED\",\n    \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n    \"instantiatedVnfInfo\" : {\n      \"virtualLinkResourceInfo\" : [ {\n        \"vnfLinkPorts\" : [ null, null ]\n      }, {\n        \"vnfLinkPorts\" : [ null, null ]\n      } ],\n      \"monitoringParameters\" : [ {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      }, {\n        \"name\" : \"name\",\n        \"performanceMetric\" : \"performanceMetric\"\n      } ],\n      \"flavourId\" : \"flavourId\",\n      \"scaleStatus\" : [ {\n        \"scaleLevel\" : 0\n      }, {\n        \"scaleLevel\" : 0\n      } ],\n      \"extVirtualLinkInfo\" : [ {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      }, {\n        \"resourceHandle\" : {\n          \"vimLevelResourceType\" : \"vimLevelResourceType\"\n        },\n        \"extLinkPorts\" : [ { }, { } ],\n        \"currentVnfExtCpData\" : {\n          \"cpConfig\" : {\n            \"key\" : {\n              \"cpProtocolData\" : [ {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              }, {\n                \"ipOverEthernet\" : {\n                  \"ipAddresses\" : [ {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  }, {\n                    \"fixedAddresses\" : [ null, null ],\n                    \"addressRange\" : { },\n                    \"type\" : \"IPV4\",\n                    \"numDynamicAddresses\" : 6\n                  } ],\n                  \"segmentationId\" : \"segmentationId\"\n                },\n                \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n              } ]\n            }\n          }\n        }\n      } ],\n      \"localizationLanguage\" : \"localizationLanguage\",\n      \"extManagedVirtualLinkInfo\" : [ {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      }, {\n        \"vnfLinkPorts\" : [ {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        }, {\n          \"cpInstanceType\" : \"VNFC_CP\"\n        } ]\n      } ],\n      \"maxScaleLevels\" : [ null, null ],\n      \"vnfcResourceInfo\" : [ {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      }, {\n        \"storageResourceIds\" : [ null, null ],\n        \"vnfcCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ]\n        } ]\n      } ],\n      \"vnfState\" : \"STARTED\",\n      \"extCpInfo\" : [ {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      }, {\n        \"cpProtocolInfo\" : [ {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        }, {\n          \"ipOverEthernet\" : {\n            \"macAddress\" : \"macAddress\",\n            \"isDynamic\" : true,\n            \"addressRange\" : { },\n            \"ipAddresses\" : [ {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            }, {\n              \"subnetId\" : \"subnetId\",\n              \"addresses\" : [ \"addresses\", \"addresses\" ],\n              \"isDynamic\" : true,\n              \"addressRange\" : { },\n              \"type\" : \"IPV4\"\n            } ],\n            \"type\" : \"PV4\",\n            \"segmentationId\" : \"segmentationId\"\n          },\n          \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n        } ],\n        \"id\" : \"id\"\n      } ],\n      \"virtualStorageResourceInfo\" : [ { }, { } ]\n    },\n    \"vnfInstanceName\" : \"vnfInstanceName\",\n    \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n  } ],\n  \"monitoringParameter\" : [ {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  }, {\n    \"name\" : \"name\",\n    \"performanceMetric\" : \"performanceMetric\"\n  } ],\n  \"sapInfo\" : [ {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  }, {\n    \"sapProtocolInfo\" : [ null, null ],\n    \"description\" : \"description\",\n    \"sapName\" : \"sapName\"\n  } ],\n  \"additionalAffinityOrAntiAffinityRule\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"scope\" : \"NFVI_POP\",\n    \"vnfdId\" : [ null, null ],\n    \"vnfProfileId\" : [ null, null ],\n    \"affinityOrAntiAffiinty\" : \"AFFINITY\"\n  } ],\n  \"pnfInfo\" : [ {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  }, {\n    \"pnfName\" : \"pnfName\",\n    \"cpInfo\" : {\n      \"cpProtocolData\" : [ null, null ],\n      \"cpInstanceId\" : \"cpInstanceId\"\n    }\n  } ],\n  \"vnffgInfo\" : [ {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  }, {\n    \"vnfInstanceId\" : [ null, null ],\n    \"pnfdInfoId\" : [ null, null ],\n    \"nsVirtualLinkInfoId\" : [ null, null ]\n  } ],\n  \"id\" : \"id\",\n  \"nsInstanceName\" : \"nsInstanceName\",\n  \"virtualLinkInfo\" : [ {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  }, {\n    \"resourceHandle\" : [ null, null ],\n    \"linkPort\" : [ {\n      \"nsCpHandle\" : { }\n    }, {\n      \"nsCpHandle\" : { }\n    } ],\n    \"id\" : \"id\"\n  } ],\n  \"nsState\" : \"NOT_INSTANTIATED\"\n}",
							NsInstance.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default NsInstancesApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

}
